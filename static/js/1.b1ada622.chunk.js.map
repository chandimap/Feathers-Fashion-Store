{"version":3,"sources":["containers/Orders/Order/Order.js","containers/Orders/Orders.js"],"names":["order","props","react_default","a","createElement","className","products","map","product","key","id","title","size","amount","price","Orders","this","fetchOrders","token","userId","orders","Spinner","loading","length","Order_Order","Fragment","ScrollToTopOnMount","Component","connect","state","auth","dispatch","actions","ErrorHandler","axios"],"mappings":"oPAqBeA,UAlBD,SAACC,GACb,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACXJ,EAAMK,SAASC,IAAI,SAAAC,GAAO,OACzBN,EAAAC,EAAAC,cAAA,MAAIK,IAAKD,EAAQE,IACfR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAcH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,UAAqCG,EAAQG,OACxET,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAcH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,UAAqCG,EAAQI,MACxEV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAcH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,YAAuCG,EAAQK,QAC1EX,EAAAC,EAAAC,cAAA,eAINF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,gBAAyCJ,EAAMa,MAA/C,oBCJAC,8LAEFC,KAAKf,MAAMgB,YAAYD,KAAKf,MAAMiB,MAAOF,KAAKf,MAAMkB,yCAIpD,IAAIC,EAASlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,MASb,OARKL,KAAKf,MAAMqB,UAEVF,EAD0B,IAA7BJ,KAAKf,MAAMmB,OAAOG,OACNrB,EAAAC,EAAAC,cAAA,4CACAY,KAAKf,MAAMmB,OAAOb,IAAI,SAAAP,GAAK,OACpCE,EAAAC,EAAAC,cAACoB,EAAD,CAAOf,IAAKT,EAAMU,GAAIJ,SAAUN,EAAMM,SAAUQ,MAAOd,EAAMc,WAKjEZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MACAxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,eACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,uHACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXe,YAtBQO,aAqDNC,sBAfS,SAAAC,GACtB,MAAO,CACLT,OAAQS,EAAM7B,MAAMoB,OACpBE,QAASO,EAAM7B,MAAMsB,QACrBJ,MAAOW,EAAMC,KAAKZ,MAClBC,OAAQU,EAAMC,KAAKX,SAII,SAAAY,GACzB,MAAO,CACLd,YAAa,SAACC,EAAOC,GAAR,OAAmBY,EAASC,IAAoBd,EAAOC,OAIzDS,CAA6CK,YAAalB,EAAQmB","file":"static/js/1.b1ada622.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Order.scss';\r\n\r\nconst order = (props) => {\r\n  return (\r\n    <li className=\"order-item\">\r\n      <ul className=\"order-products\">\r\n        {props.products.map(product => (\r\n          <li key={product.id}>\r\n            <p className=\"order-title\"><span className=\"bold\">Name: </span>{product.title}</p>\r\n            <p className=\"order-title\"><span className=\"bold\">Size: </span>{product.size}</p>\r\n            <p className=\"order-title\"><span className=\"bold\">Amount: </span>{product.amount}</p>\r\n            <hr />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"order-price\">Total Price: {props.price}.00 $</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport './Orders.scss';\r\nimport axios from '../../axios';\r\nimport ErrorHandler from '../../hoc/ErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Order from './Order/Order';\r\nimport ScrollToTopOnMount from '../../shared/ScrollToTopOnMount';\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchOrders(this.props.token, this.props.userId);\r\n  };\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      (this.props.orders.length === 0)\r\n        ? orders = <p>You do not have any orders yet.</p>\r\n        : orders = this.props.orders.map(order => (\r\n          <Order key={order.id} products={order.products} price={order.price} />\r\n        ))\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <ScrollToTopOnMount />\r\n        <div className=\"orders-container\">\r\n          <h2 className=\"main-title\">Your Orders</h2>\r\n          <p className=\"main-info\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eleifend ligula neque, at faucibus metus trum sedru.</p>\r\n          <ul className=\"order-list\">\r\n            {orders}\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nOrders.propTypes = {\r\n  orders: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  token: PropTypes.string.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n  fetchOrders: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorHandler(Orders, axios));"],"sourceRoot":""}